{"version":3,"sources":["webpack:///./packages/mcwv-dialog/node_modules/focus-trap/index.js","webpack:///./packages/mcwv-drawer/node_modules/focus-trap/index.js"],"names":["activeFocusDelay","trapQueue","tabbable","xtend","activeFocusTraps","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","push","splice","deactivateTrap","unpause","delay","fn","setTimeout","module","exports","element","userOptions","doc","document","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","state","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","activate","activateOptions","updateTabbableNodes","activeElement","onActivate","addListeners","deactivate","removeListeners","deactivateOptions","clearTimeout","onDeactivate","undefined","returnFocus","tryFocus","getInitialFocusNode","addEventListener","checkFocusIn","checkPointerDown","capture","passive","checkClick","checkKey","removeEventListener","getNodeForOption","optionName","optionValue","node","Error","contains","e","target","clickOutsideDeactivates","isFocusable","allowOutsideClick","preventDefault","Document","stopImmediatePropagation","key","keyCode","isEscapeEvent","isTabEvent","shiftKey","checkTab","tabbableNodes","focus","tagName","toLowerCase","select","isSelectableInput"],"mappings":"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","file":"npm.focus-trap.b3a81c4bba18cc73033d.js","sourcesContent":["var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusDelay;\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    clearTimeout(activeFocusDelay);\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    updateTabbableNodes();\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    activeFocusDelay = delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n      return;\n    }\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n    e.preventDefault();\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusDelay;\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    clearTimeout(activeFocusDelay);\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    updateTabbableNodes();\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    activeFocusDelay = delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n      return;\n    }\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n    e.preventDefault();\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n"],"sourceRoot":""}